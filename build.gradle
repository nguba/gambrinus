buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
   
    sourceCompatibility = 1.8
    group = 'me.nguba'
    version = '3.0.0-SNAPSHOT'
    
    repositories {
    	mavenCentral()
    	maven { url "https://repo.spring.io/milestone" }
    }
    
    ext {
    	springCloudServicesVersion = '2.0.0.RC1'
    	springCloudVersion = 'Finchley.RC2'
    }
    
    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    
        failFast = true
    }
    
    configurations {
        compile.exclude module: 'junit'
    }
    
    dependencies {     
        testImplementation("org.assertj:assertj-core:3.+")
        testImplementation('nl.jqno.equalsverifier:equalsverifier:2.+')
        testImplementation('org.junit.jupiter:junit-jupiter-api:5.1.0')
        testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.1.0')
    }
    
}

subprojects {
    eclipse {
        project {
            name = rootProject.name + "-" + project.name
        }
    }
   
}

apply plugin: 'org.springframework.boot' 
apply plugin: 'io.spring.dependency-management'

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {

    compile project (":kernel:mash")
    compile project (":infrastructure")
     
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('io.micrometer:micrometer-registry-prometheus:latest.release')
    
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

